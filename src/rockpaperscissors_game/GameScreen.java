/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rockpaperscissors_game;
    
import java.util.Random;

/**
 *
 * @author SchoolAcc
 */
public class GameScreen extends javax.swing.JFrame {
    public static String playerChosen;
    int points;
    Random rand = new Random(3);
    

    /**
     * Creates new form GameScreen
     */
    public GameScreen() {
        initComponents();
        computerChoseRock.setVisible(false);
        computerChosePaper.setVisible(false);
        computerChoseScissors.setVisible(false);
        win.setVisible(false);
        lose.setVisible(false); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BackButton = new javax.swing.JButton();
        computerChoseRock = new javax.swing.JLabel();
        computerChoseScissors = new javax.swing.JLabel();
        computerChosePaper = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        rock = new javax.swing.JButton();
        paper = new javax.swing.JButton();
        scissors = new javax.swing.JButton();
        lose = new javax.swing.JLabel();
        win = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        pointScoreScreen = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        BackButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rockpaperscissors_game/BackButton.png"))); // NOI18N
        BackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButtonActionPerformed(evt);
            }
        });
        getContentPane().add(BackButton);
        BackButton.setBounds(6, 6, 375, 152);

        computerChoseRock.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rockpaperscissors_game/Rock.jpg"))); // NOI18N
        getContentPane().add(computerChoseRock);
        computerChoseRock.setBounds(510, 60, 311, 162);

        computerChoseScissors.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rockpaperscissors_game/Scissors.jpg"))); // NOI18N
        getContentPane().add(computerChoseScissors);
        computerChoseScissors.setBounds(550, 50, 292, 207);

        computerChosePaper.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rockpaperscissors_game/Paper.jpg"))); // NOI18N
        getContentPane().add(computerChosePaper);
        computerChosePaper.setBounds(550, 50, 243, 207);

        jLabel1.setText("the computer chose:");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(600, 10, 140, 16);

        rock.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rockpaperscissors_game/Rock.jpg"))); // NOI18N
        rock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rockActionPerformed(evt);
            }
        });
        getContentPane().add(rock);
        rock.setBounds(60, 560, 170, 140);

        paper.setBackground(new java.awt.Color(102, 102, 102));
        paper.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rockpaperscissors_game/Paper.jpg"))); // NOI18N
        paper.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paperActionPerformed(evt);
            }
        });
        getContentPane().add(paper);
        paper.setBounds(540, 530, 259, 219);

        scissors.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rockpaperscissors_game/Scissors.jpg"))); // NOI18N
        scissors.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scissorsActionPerformed(evt);
            }
        });
        getContentPane().add(scissors);
        scissors.setBounds(1000, 530, 259, 219);

        lose.setText("Oh No You didnt win that one :(");
        getContentPane().add(lose);
        lose.setBounds(150, 410, 210, 16);

        win.setText("Yay you scored a point :)");
        getContentPane().add(win);
        win.setBounds(1050, 420, 160, 16);

        jLabel2.setText("Your Points: ");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(1030, 20, 90, 16);

        pointScoreScreen.setText("0");
        getContentPane().add(pointScoreScreen);
        pointScoreScreen.setBounds(1130, 20, 160, 16);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButtonActionPerformed
        MainMenu MM = new MainMenu();
        MM.setSize(1295, 780);
        MM.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_BackButtonActionPerformed

    private void rockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rockActionPerformed
        playerChosen = "rock";
        int ComputerChoice = rand.nextInt(3) + 1;
        if(ComputerChoice == 1){
                computerChoseRock.setVisible(true);
                computerChosePaper.setVisible(false);
                computerChoseScissors.setVisible(false);
                lose.setVisible(true);
                win.setVisible(false);
            }else if(ComputerChoice == 2){
                computerChosePaper.setVisible(true);
                computerChoseRock.setVisible(false);
                computerChoseScissors.setVisible(false);
                lose.setVisible(true);
                win.setVisible(false);
            }else{
                computerChoseScissors.setVisible(true);
                computerChosePaper.setVisible(false);
                computerChoseRock.setVisible(false);
                lose.setVisible(false);
                win.setVisible(true);
                points = points + 1;
                String pointsStr = Integer.toString(points);
                pointScoreScreen.setText(pointsStr);
            }
    }//GEN-LAST:event_rockActionPerformed

    private void paperActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paperActionPerformed
        playerChosen = "paper";
        int ComputerChoice = rand.nextInt(3) + 1;
        if(ComputerChoice == 1){
                computerChoseRock.setVisible(true);
                computerChosePaper.setVisible(false);
                computerChoseScissors.setVisible(false);
                lose.setVisible(false);
                win.setVisible(true);
                points = points + 1;
                String pointsStr = Integer.toString(points);
                pointScoreScreen.setText(pointsStr);
            }else if(ComputerChoice == 2){
                computerChosePaper.setVisible(true);
                computerChoseRock.setVisible(false);
                computerChoseScissors.setVisible(false);
                lose.setVisible(true);
                win.setVisible(false);
            }else{
                computerChoseScissors.setVisible(true);
                computerChosePaper.setVisible(false);
                computerChoseRock.setVisible(false);
                lose.setVisible(true);
                win.setVisible(false);
            }
    }//GEN-LAST:event_paperActionPerformed

    private void scissorsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scissorsActionPerformed
        playerChosen = "scissors";
        int ComputerChoice = rand.nextInt(3) + 1;
        if(ComputerChoice == 1){
                computerChoseRock.setVisible(true);
                computerChosePaper.setVisible(false);
                computerChoseScissors.setVisible(false);
                lose.setVisible(true);
                win.setVisible(false);
            }else if(ComputerChoice == 2){
                computerChosePaper.setVisible(true);
                computerChoseRock.setVisible(false);
                computerChoseScissors.setVisible(false);
                lose.setVisible(false);
                win.setVisible(true);
                points = points + 1;
                String pointsStr = Integer.toString(points);
                pointScoreScreen.setText(pointsStr);
            }else{
                computerChoseScissors.setVisible(true);
                computerChosePaper.setVisible(false);
                computerChoseRock.setVisible(false);
                lose.setVisible(true);
                win.setVisible(false);
            }
    }//GEN-LAST:event_scissorsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GameScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GameScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GameScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GameScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        
        
        
        
        
        
        
        
        
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GameScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackButton;
    private javax.swing.JLabel computerChosePaper;
    private javax.swing.JLabel computerChoseRock;
    private javax.swing.JLabel computerChoseScissors;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lose;
    private javax.swing.JButton paper;
    private javax.swing.JLabel pointScoreScreen;
    private javax.swing.JButton rock;
    private javax.swing.JButton scissors;
    private javax.swing.JLabel win;
    // End of variables declaration//GEN-END:variables
}
